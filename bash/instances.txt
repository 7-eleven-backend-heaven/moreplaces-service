## CONNECT TO EC2 INSTANCE:

chmod 400 AWS_DOCKER.pem
----------------------------------
## SERVICE1: ssh -i "AWS_DOCKER.pem" ec2-user@ec2-54-177-24-3.us-west-1.compute.amazonaws.com
IPv4: http://54.177.24.3/

## SERVICE2: ssh -i "AWS_DOCKER.pem" ec2-user@ec2-54-193-35-2.us-west-1.compute.amazonaws.com
IPv4: 54.193.35.2

3# SERVICE3: ssh -i "AWS_DOCKER.pem" ec2-user@ec2-54-176-67-188.us-west-1.compute.amazonaws.com
IPv4: 54.176.67.188

--------------------
## NGINX:  ssh -i "AWS_DOCKER.pem" ec2-user@ec2-18-144-23-168.us-west-1.compute.amazonaws.com
IPv4: 18.144.23.168


CONFIG:
events {}
http {
        upstream backend {
                server 54.177.24.3:3009;
                server 54.193.35.2:3009;
        }
     server {
        listen 80;
        location / {
          proxy_pass http://backend;
        }
     }
  }


-----------------------

## DB: ssh -i "AWS_DOCKER.pem" ec2-user@ec2-50-18-10-219.us-west-1.compute.amazonaws.com
IPv4: http://50.18.10.219
-----------------------------------------
USE: nohup to run server in the background

CHECK Port: fuser 3009/tcp
KILL PORT: fuser 3009/tcp -k


NODE PRODUCTION: "NODE_ENV=production node server/index.js"
----------------------------------------

## NEW RELIC
arn:aws:iam::467523161837:role/NewRelicInfrastructure-Integrations


-----------------------------------------

chmod 755 to allow permisssions

## ACCESS AUTHENCATION SETTINGS
sudo vim /var/lib/pgsql/data/pg_hba.conf

## ACCESS CONFIG SETTINGS
sudo vim /var/lib/pgsql/data/postgresql.conf

## POSTGRES STATUS COMANDS:

CHECK STATUS: service postgresql status

START: sudo service postgresql start

RESTART: sudo systemctl restart postgresql.service



## LOGIN TO POSTGRES:
sudo su - postgres
psql -U postgres

----------------------------------------


## RUN SCHEMA
DROP DATABASE IF EXISTS moreplaces;
CREATE DATABASE moreplaces;

\c moreplaces;

DROP TABLE IF EXISTS related;
DROP TABLE IF EXISTS properties;
DROP TABLE IF EXISTS savedlists;

CREATE TABLE savedlists (
  listid SERIAL NOT NULL PRIMARY KEY,
  listname VARCHAR NOT NULL
);

CREATE TABLE properties (
  propertyid SERIAL NOT NULL PRIMARY KEY,
  description VARCHAR,
  imageurl VARCHAR NOT NULL,
  issuperhost BOOLEAN NOT NULL,
  numofratings INT,
  numofrooms INT NOT NULL,
  price VARCHAR NOT NULL,
  propertytype VARCHAR NOT NULL,
  rating DECIMAL,
  savedlistid INT DEFAULT NULL

);

CREATE TABLE related (
  mainpropid INT,
  relatedid INT

);

SELECT NOW()::TIME;

\COPY savedlists FROM '/home/ec2-user/moreplaces-service/database/seeding/savedData.csv' DELIMITER ',' CSV HEADER;

\COPY properties FROM '/home/ec2-user/moreplaces-service/database/seeding/propertiesData.csv' DELIMITER ',' CSV HEADER;

\COPY related FROM '/home/ec2-user/moreplaces-service/database/seeding/relatedData.csv' DELIMITER ',' CSV HEADER;

SELECT NOW()::TIME;

ALTER TABLE properties ADD CONSTRAINT fk_list FOREIGN KEY (savedlistid) REFERENCES savedlists(listid) ON DELETE SET NULL;

CREATE INDEX mainprop ON related (mainpropid);

ALTER TABLE related ADD CONSTRAINT fk_related FOREIGN KEY (relatedid) REFERENCES properties(propertyid) ON DELETE CASCADE;

